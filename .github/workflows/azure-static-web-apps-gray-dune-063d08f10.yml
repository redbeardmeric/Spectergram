name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
       id-token: write
       contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: |
            package-lock.json
            api/package-lock.json
      - name: Install frontend dependencies
        run: npm ci
      - name: Build frontend
        run: npm run build
      - name: Install API dependencies
        run: npm ci
        working-directory: api
      - name: Build API
        run: npm run build
        working-directory: api
      - name: Prune API dev dependencies
        run: npm prune --production
        working-directory: api
      - name: Clean up Oryx artifacts
        run: rm -rf api/.oryx_* api/node_modules/.cache
      - name: Remove unnecessary files from API
        run: |
          find api/node_modules -name "*.md" -delete
          find api/node_modules -name "LICENSE*" -delete
          find api/node_modules -name "*.ts" -not -name "*.d.ts" -delete
          find api/node_modules -type d -name "test" -o -name "tests" -o -name "docs" | xargs rm -rf
      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client
      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
           script: |
               const coredemo = require('@actions/core')
               return await coredemo.getIDToken()
           result-encoding: string
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_GRAY_DUNE_063D08F10 }}
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "/" # App source code path
          api_location: "api" # Api source code path - optional
          output_location: "dist" # Built app content directory - optional
          skip_app_build: true
          skip_api_build: true
          github_id_token: ${{ steps.idtoken.outputs.result }}
          deployment_environment: "production"
          ###### End of Repository/Build Configurations ######
        env:
          NODE_VERSION: "22"
          FUNCTIONS_NODE_VERSION: "22"

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_GRAY_DUNE_063D08F10 }}
          app_location: "/" # App source code path
          action: "close"
